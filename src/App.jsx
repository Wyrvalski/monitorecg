import React, { useEffect } from 'react';
import CanvasJSReact from './assets/canvasjs.react';
import 'react-horizontal-scrolling-menu/dist/styles.css';
import {Container, ButtonContainer} from "./style";

const { CanvasJSChart } = CanvasJSReact;
let chart = null;

function App() {
  const xAxisStripLinesArray = [];
  const yAxisStripLinesArray = [];
  const dps = [];

  const dataPointsArray = [623, 627, 632, 642, 650, 657, 662, 663, 669, 674, 677, 678, 672, 669, 665, 663, 656, 653, 645,
    639, 634, 634, 639, 639, 641, 636, 637, 640, 643, 643, 643, 640, 641, 642, 643, 643, 641, 641, 640, 639, 636, 638,
    634, 635, 639, 639, 641, 636, 631, 633, 633, 640, 641, 647, 652, 657, 663, 666, 662, 658, 655, 651, 648, 635, 623,
    616, 611, 609, 609, 608, 626, 674, 763, 842, 854, 785, 672, 593, 564, 568, 579, 582, 586, 587, 587, 588, 591, 598,
    602, 603, 607, 608, 611, 613, 614, 621, 629, 638, 658, 674, 692, 698, 701, 703, 702, 701, 697, 693, 685, 674, 664, 652,
    646, 643, 638, 633, 634, 631, 635, 635, 628, 632, 627, 631, 631, 628, 626, 621, 616, 617, 615, 617, 616, 609, 609, 605, 604,
    600, 596, 598, 600, 600, 599, 592, 591, 593, 589, 587, 589, 594, 603, 605, 607, 610, 613, 615, 612, 610, 601, 592, 584, 577, 572,
    564, 561, 557, 565, 603, 674, 770, 823, 793, 697, 589, 533, 523, 531, 535, 532, 533, 534, 539, 537, 540, 544, 554, 560, 566, 570,
    570, 573, 576, 581, 583, 585, 590, 598, 607, 614, 617, 621, 625, 623, 619, 618, 618, 622, 623, 618, 611, 606, 603, 600, 599, 599,
    598, 599, 593, 589, 586, 586, 585, 586, 593, 595, 595, 597, 594, 592, 590, 590, 592, 595, 593, 592, 593, 596, 592, 589, 584, 585,
    586, 586, 583, 582, 591, 597, 606, 609, 612, 613, 616, 622, 625, 629, 626, 619, 607, 595, 583, 574, 565, 563, 560, 556, 551, 559,
    595, 673, 767, 809, 768, 664, 562, 511, 508, 511, 517, 518, 521, 524, 523, 526, 528, 530, 535, 540, 542, 544, 548, 551, 560, 561,
    570, 574, 581, 587, 591, 598, 598, 602, 608, 623, 633, 639, 634, 623, 614, 602, 599, 592, 588, 588, 587, 585, 584, 581, 581, 582,
    581, 581, 579, 576, 575, 575, 574, 572, 573, 572, 572, 570, 563, 563, 562, 566, 564, 560, 559, 559, 562, 565, 557, 559, 556, 554,
    555, 554, 556, 559, 564, 567, 572, 572, 575, 578, 583, 583, 577, 575, 566, 560, 548, 539, 538, 533, 535, 536, 555, 604, 691, 776,
    799, 736, 623, 534, 501, 502, 508, 508, 509, 510, 510, 515, 516, 518, 520, 521, 525, 531, 537, 542, 546, 549, 557, 565, 574, 576,
    582, 588, 599, 604, 607, 608, 605, 603, 594, 588, 579, 566, 562, 556, 559, 560, 557, 557, 553, 559, 560, 560, 558, 555, 554, 559,
    558, 555, 556, 553, 558, 560, 560, 559, 560, 560, 561, 558, 554, 556, 552, 551, 548, 547, 550, 551, 553, 556, 556, 561, 560, 560,
    554, 553, 561, 565, 568, 564, 559, 553, 542, 531, 520, 512, 511, 512, 516, 533, 578, 663, 747, 766, 696, 584, 502, 478, 485, 493,
    491, 497, 496, 501, 504, 504, 506, 504, 508, 514, 522, 525, 527, 529, 534, 541, 546, 552, 553, 558, 560, 567, 574, 577, 574, 570,
    566, 565, 556, 547, 541, 532, 532, 529, 528, 526, 523, 519, 520, 519, 521, 520, 520, 520, 519, 519, 518, 518, 518, 519, 517, 513,
    510, 509, 512, 512, 510, 508, 507, 508, 505, 505, 504, 506, 509, 513, 525, 528, 536, 537, 539, 543, 540, 534, 529, 519, 513, 504,
    495, 485, 479, 476, 488, 522, 595, 687, 733, 700, 601, 505, 456, 453, 458, 463, 462, 462, 463, 464, 468, 473, 476, 477, 483, 487,
    497, 501, 506, 509, 516, 523, 527, 536, 543, 549, 556, 557, 564, 566, 567, 570, 558, 550, 541, 536, 533, 527, 521, 515, 515, 519,
    521, 522, 520, 521, 523, 523, 524, 524, 526, 530, 532, 533, 530, 527, 523, 524, 525, 527, 527, 522, 521, 520, 518, 520, 522, 522,
    522, 525, 531, 534, 537, 539, 544, 545, 545, 543, 541, 538, 532, 522, 512, 505, 502, 498, 499, 504, 535, 596, 691, 759, 751, 666,
    557, 484, 464, 471, 481, 484, 484, 485, 485, 489, 492, 494, 495, 495, 497, 504, 503, 507, 512, 517, 528, 537, 546, 553, 559, 566,
    568, 570, 570, 572, 572, 570, 560, 550, 545, 539, 534, 528, 524, 523, 525, 522, 526, 527, 528, 523, 522, 524, 531, 534, 534, 529,
    527, 525, 527, 526, 530, 528, 529, 526, 524, 522, 518, 518, 517, 521, 522, 520, 522, 524, 529, 537, 542, 548, 551, 555, 555, 553,
    550, 547, 539, 535, 523, 520, 516, 516, 512, 513, 535, 595, 693, 770, 775, 692, 578, 495, 468, 474, 484, 489, 490, 496, 500, 508,
    512, 509, 508, 507, 510, 516, 524, 528, 533, 537, 541, 553, 560, 570, 576, 580, 586, 590, 596, 599, 596, 587, 574, 570, 559, 551,
    545, 539, 540, 542, 541, 540, 536, 537, 537, 537, 538, 536, 540, 540, 542, 542, 538, 531, 529, 528, 529, 531, 526, 522, 520, 519,
    519, 520, 518, 517, 515, 513, 515, 512, 511, 511, 516, 523, 524, 524, 524, 531, 538, 539, 540, 539, 530, 525, 512, 503, 498, 494,
    492, 497, 528, 597, 698, 773, 765, 680, 567, 494, 473, 476, 483, 484, 484, 484, 486, 492, 496, 495, 497, 502, 509, 512, 511, 509, 514,
    518, 525, 529, 538, 544, 552, 559, 561, 566, 570, 570, 571, 564, 558, 546, 543, 533, 530, 525, 522, 518, 521, 520, 516, 514, 511, 514,
    521, 520, 522, 519, 522, 522, 519, 516, 514, 512, 513, 511, 507, 510, 510, 512, 509, 502, 500, 497, 500, 501, 500, 499, 500, 505, 509,
    515, 524, 529, 540, 544, 544, 544, 536, 529, 521, 509, 499, 493, 492, 493, 494, 500, 529, 590, 694, 762, 751, 658, 544, 472, 458, 464,
    473, 474, 474, 476, 476, 484, 492, 492, 497, 495, 497, 501, 502, 508, 512, 523, 530, 540, 543, 545, 550, 558, 562, 565, 561, 561, 556,
    554, 545, 534, 530, 520, 516, 509, 508, 509, 512, 507, 505, 501, 502, 505, 504, 503, 503, 504, 508, 509, 507, 505, 503, 504, 502, 499,
    497, 503, 506, 504, 500, 495, 501, 501, 499, 500, 497, 497, 498, 499, 506, 510, 517, 520, 525, 530, 533, 533, 529, 525, 516, 511, 501,
    493, 490, 483, 483, 484, 490, 523, 595, 693, 749, 716, 611, 500, 447, 440, 446, 456, 458, 465, 466, 464, 462, 461, 461, 464, 470, 474,
    481, 491, 494, 498, 498, 508, 513, 519, 527, 529, 534, 530, 531, 533, 534, 529, 522, 516, 511, 505, 498, 492, 491, 487, 483, 478, 481,
    485, 488, 489, 486, 486, 487, 488, 488, 486, 484, 481, 482, 481, 484, 483, 482, 479, 475, 469, 468, 468, 470, 468, 467, 466, 465, 464,
    459, 460, 463, 471, 475];
  const color = 'red';

  const options = {
    theme: 'light2',
    axisY: {
      stripLines: yAxisStripLinesArray,
      gridColor: color,
      gridThickness: .5,
      interval: 20,
      lineColor: color,
      tickThickness: 0,
      labelFormatter() {
        return '';
      },
    },
    axisX: {
      stripLines: xAxisStripLinesArray,
      gridColor: color,
      gridThickness: 1,
      interval: 20,
      lineColor: color,
      tickThickness: 0,
      labelFormatter() {
        return '';
      },
    },
    data: [
      {
        type: 'spline',
        color: 'black',
        dataPoints: dps,
      },
    ],
  };

  function addDataPoints() {
    if (chart) {
      for (let i = 0; i < dataPointsArray.length; i+=1) {
        dps.push({ y: dataPointsArray[i] });
      }
      chart.render();
    }
  }

  useEffect(() => {
    if (!chart) return;
    addDataPoints(chart);
  }, []);
  let interval = null;
  console.log(document.getElementById('container'), `teste`)
  return (<>
    <Container id="container">
      <div style={{width: '2000px'}}>
        <CanvasJSChart
            options={options}
            onRef={(ref) => {chart = ref}}
        />
      </div>
      {/* <button id="slideRight" type="button" onClick={document.getElementById('container').scrollLeft -= 20}>Slide right</button> */}
    </Container>
        <ButtonContainer>
          <button id="play" type="button" onClick={() =>  {interval = setInterval(() => {
            document.getElementById('container').scrollLeft += 1}, 1)
          }}>Play</button>
          <button id="stop" type="button" onClick={() =>  clearInterval(interval)}>Stop</button>
          <button id="play" type="button" onClick={() =>
          { document.getElementById('container').scrollLeft = 0}
          }>Reset</button>
        </ButtonContainer>

</>

);
}




export default App;
